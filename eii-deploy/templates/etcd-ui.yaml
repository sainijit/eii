# Copyright Intel Corporation

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.config.etcd_ui.name }}
  namespace: {{ .Values.namespace }}
spec:
  type: LoadBalancer
  selector:
    app: etcd-ui
  ports:
  - port: {{ .Values.config.etcd_ui.int_port }}
    targetPort: {{ .Values.config.etcd_ui.int_port }}
    # nodePort: {{ .Values.config.etcd_ui.ext_port }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: etcd-ui
  name: deployment-etcd-ui
  namespace: {{ .Values.namespace }}

spec:
  replicas: 1
  selector:
    matchLabels:
      app: etcd-ui
  template:
    metadata:
      labels:
        app: etcd-ui
    spec:
      # {{- if and .Values.DOCKER_USERNAME .Values.DOCKER_PASSWORD }}
      # imagePullSecrets:
      # - name: registryauth
      # {{- end }}
      containers:
      - name: ia-etcd-ui
        image: {{ .Values.DOCKER_REGISTRY }}ia_etcd_ui:{{ .Values.EII_VERSION }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        volumeMounts:
        - name: tmp-ssl
          mountPath: "/opt/nginx"
        {{ if eq .Values.env.DEV_MODE false}}
        - name: etcd-certs
          mountPath: /run/secrets/etcd/
        {{ end }}
        env:
        - name: AppName
          value: "EtcdUI"
        - name: DEV_MODE
          value: '{{ .Values.env.DEV_MODE }}'
        - name: NGINX_PORT
          value: "{{ .Values.config.etcd_ui.int_port }}"
        - name: ETCD_HOST
          value: {{ .Values.config.etcd.name }}
        - name: ETCD_CLIENT_PORT
          value: '{{ .Values.config.etcd.client_port }}'
        - name: PROVISION_MODE
          value: ''
        - name: ETCD_PREFIX
          value: ''
        - name: ETCD_ENDPOINT
          value: '{{ .Values.config.etcd.name }}:{{ .Values.config.etcd.client_port }}'
        - name: ETCD_USER
          value: "root"
        {{ if eq .Values.env.DEV_MODE false}}
        - name: CONFIGMGR_CACERT
          value: "/run/secrets/etcd/cacert.pem"
        - name: CONFIGMGR_CERT
          value: "/run/secrets/etcd/EtcdUI_client_certificate.pem"
        - name: CONFIGMGR_KEY
          value: "/run/secrets/etcd/EtcdUI_client_key.pem"
        {{ end }}
      volumes:
      - name: tmp-ssl
        emptyDir:
          medium: Memory
      {{ if eq .Values.env.DEV_MODE false}}
      - name: etcd-certs
        secret:
          secretName: eii-certs
          items:
          - key: cacert.pem
            path: cacert.pem
          - key: EtcdUI_client_certificate.pem
            path: EtcdUI_client_certificate.pem
          - key: EtcdUI_client_key.pem
            path: EtcdUI_client_key.pem
      {{ end }}

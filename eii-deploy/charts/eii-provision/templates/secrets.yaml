# Copyright Intel Corporation

{{ if eq .Values.env.DEV_MODE false}}
apiVersion: v1
kind: Pod
metadata:
  name: eii-secrets
  namespace: {{ .Values.namespace }}
  labels:
    app: eii-secrets
spec:
  nodeSelector:
    node-role.kubernetes.io/master: ""
  serviceAccountName: pod-read-sa
  restartPolicy: Never
  containers:
  - name: eii-secrets
    image: bitnami/kubectl:1.22
    command:
    - /bin/bash
    - -c
    - |
      count=0
      cmd=$(kubectl get secrets | grep eii-certs | wc -l)
      if [ $cmd -ne 0 ]; then
        kubectl delete secret eii-certs
      fi
      while [ $count -eq 0 ]
      do
        count=$(kubectl logs $(kubectl get pods | grep ia-configmgr-agent | awk '{print $1}') | grep -ic "Provisioning is done" )
        sleep 2
      done
      for file in /tmp/Certificates/*
      do
          echo "File is $file"
          string+=" --from-file $file"
      done
      # Create secret for EII services
      kubectl create secret generic eii-certs $string
    volumeMounts:
    - name: certs
      mountPath: /tmp/Certificates
  volumes:
  - name: certs
    hostPath:
      path:  {{ .Values.env.EII_HOME_DIR }}/build/helm-eii/eii-deploy/Certificates
{{ end }}
---
{{- if and .Values.DOCKER_USERNAME .Values.DOCKER_PASSWORD }}
apiVersion: v1
kind: Secret
metadata:
  name: registryauth
  namespace: {{ .Values.namespace }}
data:
  {{- if .Values.DOCKER_REGISTRY }}
  .dockerconfigjson: {{ printf "{\"auths\": {\"%s\": {\"auth\": \"%s\"}}}" .Values.DOCKER_REGISTRY (printf "%s:%s" .Values.DOCKER_USERNAME .Values.DOCKER_PASSWORD | b64enc) | b64enc }}
  {{- else }}
  .dockerconfigjson: {{ printf "{\"auths\": {\"https://index.docker.io/v1/\": {\"auth\": \"%s\"}}}" (printf "%s:%s" .Values.DOCKER_USERNAME .Values.DOCKER_PASSWORD | b64enc) | b64enc }}
  {{- end }}
type: kubernetes.io/dockerconfigjson
{{- end }}
